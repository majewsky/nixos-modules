# This module is imported by every system, both headless servers and workstations.

{ config, pkgs, lib, ... }:

let
  cfg = config.majewsky.base;
in

with lib; {

  imports = [
    /nix/my/secrets/generated-basic.nix # supplies machineID and hostname
    /nix/my/secrets/generated-wg-monitoring.nix # supplies monitoringNetwork options
  ];

  options.majewsky.base = {
    machineID = mkOption {
      description = "machine ID (appears in autogenerated IP addresses etc.)";
      type = types.ints.u8;
    };

    monitoringNetwork = {
      enable = mkOption {
        default = false;
        description = "whether to set up the wg-monitoring interface with the client configuration";
        type = types.bool;
      };

      slash24 = mkOption {
        description = "network part of wg-monitoring interface address";
        type = types.string;
      };

      server.endpoint = mkOption {
        description = "host:port address of wg-monitoring server";
        type = types.string;
      };
      server.publicKey = mkOption {
        description = "public key of wg-monitoring server";
        type = types.string;
      };
    };
  };

  config = {
    ############################################################################
    # basic setup for interactive use

    environment.systemPackages = with pkgs; [
      git
      gnumake
      gnupg
      vim
    ];

    i18n = {
      consoleFont = "Lat2-Terminus16";
      consoleKeyMap = "us";
      defaultLocale = "de_DE.UTF-8";
    };

    boot.tmpOnTmpfs = true;
    time.timeZone = "Europe/Berlin";
    services.openssh.enable = true;

    users.users.stefan = {
      isNormalUser = true;
      uid = 1000;
      extraGroups = ["wheel"];
      openssh.authorizedKeys.keyFiles = [ /nix/my/secrets/ssh-keys ];
    };

    ############################################################################
    # overlay network for monitoring using Wireguard

    networking.wireguard.interfaces."wg-monitoring" = lib.mkIf cfg.monitoringNetwork.enable {
      ips = [ "${cfg.monitoringNetwork.slash24}.${toString cfg.machineID}/24" ];
      peers = [{
        allowedIPs = [ "${cfg.monitoringNetwork.slash24}.0/24" ];
        endpoint = "${cfg.monitoringNetwork.server.endpoint}";
        publicKey = "${cfg.monitoringNetwork.server.publicKey}";
        presharedKeyFile = "/nix/my/secrets/generated-wg-monitoring-psk";
        persistentKeepalive = 25;
      }];
      privateKeyFile = "/nix/my/secrets/generated-wg-monitoring-key";
    };
  };

}
